name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'Dockerfile'
      - 'install.sh'
      - '.github/workflows/docker-build-push.yml'
  pull_request:
    branches:
      - main
      - master
    paths:
      - 'Dockerfile'
      - 'install.sh'
      - '.github/workflows/docker-build-push.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=sha-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build Docker image (not pushed yet)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Enable compression
          outputs: type=docker,compression=zstd,compression-level=3,force-compression=true
          provenance: false

      - name: Install crane
        if: github.event_name != 'pull_request'
        run: |
          curl -sL "https://github.com/google/go-containerregistry/releases/download/v0.19.0/go-containerregistry_Linux_x86_64.tar.gz" | tar -xz -C /tmp
          sudo mv /tmp/crane /usr/local/bin/crane
          crane version

      - name: Flatten and push image (squash layers)
        if: github.event_name != 'pull_request'
        run: |
          # Get the first tag (primary tag) to flatten
          PRIMARY_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
          echo "Original image: ${PRIMARY_TAG}"

          # Show original image size
          docker images "${PRIMARY_TAG}" --format "Size before flatten: {{.Size}}"

          # Flatten the image (combines all layers into one)
          crane flatten "${PRIMARY_TAG}" "${PRIMARY_TAG}"

          # Show flattened image size
          docker images "${PRIMARY_TAG}" --format "Size after flatten: {{.Size}}"

          # Push the flattened primary tag
          crane push "${PRIMARY_TAG}" "${PRIMARY_TAG}"

          # Push all other tags pointing to the same flattened image
          echo "${{ steps.meta.outputs.tags }}" | tail -n +2 | while read -r tag; do
            if [ -n "$tag" ]; then
              echo "Pushing additional tag: $tag"
              crane push "${PRIMARY_TAG}" "$tag"
            fi
          done
